from docx import Document
from docx.enum.style import WD_STYLE_TYPE
from docx.shared import Pt, RGBColor, Inches
from docx.oxml.ns import qn
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
import docx

document = Document()
sections = document.sections
for section in sections:
    section.top_margin = Inches(0.5)
    section.bottom_margin = Inches(1)
    section.left_margin = Inches(1)
    section.right_margin = Inches(1)

section = document.sections[0]

sectPr = section._sectPr
cols = sectPr.xpath('./w:cols')[0]
cols.set(qn('w:num'), '2')

def writedocx(content, font_name = 'Times New Roman', font_size = 12, font_bold = False, font_italic = False, font_underline = False, color = RGBColor(0, 0, 0),
              before_spacing = 5, after_spacing = 5, line_spacing = 1.5, keep_together = True, keep_with_next = False, page_break_before = False,
              widow_control = False, align = 'left', style = ''):
    paragraph = document.add_paragraph(str(content))
    paragraph.style = document.styles.add_style(style, WD_STYLE_TYPE.PARAGRAPH)
    font = paragraph.style.font
    font.name = font_name
    font.size = Pt(font_size)
    font.bold = font_bold
    font.italic = font_italic
    font.underline = font_underline
    font.color.rgb = color
    paragraph_format = paragraph.paragraph_format
    paragraph_format.space_before = Pt(before_spacing)
    paragraph_format.space_after = Pt(after_spacing)
    paragraph.line_spacing = line_spacing
    paragraph_format.keep_together = keep_together
    paragraph_format.keep_with_next = keep_with_next
    paragraph_format.page_break_before = page_break_before
    paragraph_format.widow_control = widow_control
    if align.lower() == 'left':
        paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
    elif align.lower() == 'center':
        paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER
    elif align.lower() == 'right':
        paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.RIGHT
    elif align.lower() == 'justify':
        paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY
    else:
        paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT

dank_paragraph = 'An Internet meme, more commonly known simply as a meme (/miːm/ MEEM), is a type of meme that is spread via the Internet, often through social media platforms. Traditionally, a prominent form of such memes consisted of image macros paired with a concept or catchphrase. In some cases, these memes used words and phrases contain intentional misspellings (such as lolcats) or incorrect grammar (such as doge and "All your base are belong to us"). However, in more recent times, memes have evolved from simple image macros with text to more elaborate forms such as challenges, GIFs and viral sensations. These small movements tend to spread from person to person via social networks, blogs, direct email, or news sources. They may relate to various existing Internet cultures or subcultures, often created or spread on various websites. Fads and sensations tend to grow rapidly on the Internet, because the instant communication facilitates word of mouth transmission. Examples of such fads include posting a photo of people lying down in public places (called "planking") and uploading a short video of people doing the Harlem Shake. “Dank” memes have emerged as a new form of image-macros, defined by the inclusion of more surreal and nonsensical themes.'
dank_paragraph = dank_paragraph.split('.')

a = 'a'
for dank_line in dank_paragraph:
    writedocx(content = '- ' + dank_line, style = a)
    a += 'a'


document.save('word.docx')
